Search.setIndex({"docnames": ["index", "knowledge_algorithms", "knowledge_algorithms.deep_learning", "knowledge_algorithms.knowledge_graph", "knowledge_algorithms.language_models", "modules", "talent_recommendation", "tutorials"], "filenames": ["index.rst", "knowledge_algorithms.rst", "knowledge_algorithms.deep_learning.rst", "knowledge_algorithms.knowledge_graph.rst", "knowledge_algorithms.language_models.rst", "modules.rst", "talent_recommendation.rst", "tutorials.rst"], "titles": ["Welcome to RecSysAlgo\u2019s documentation!", "knowledge_algorithms package", "knowledge_algorithms.deep_learning package", "knowledge_algorithms.knowledge_graph package", "knowledge_algorithms.language_models package", "KnowledgeAlgorithms", "talent_recommendation package", "Tutorials"], "terms": {"knowledgealgorithm": 0, "knowledge_algorithm": [0, 5], "packag": [0, 5], "subpackag": [0, 5], "submodul": [0, 5], "base": [0, 2, 3, 4, 5, 6], "modul": [0, 5], "setup": [0, 5], "tree_model": [0, 5], "talent_recommend": [0, 5], "bipartiterecsi": [0, 5], "metric": [0, 5], "index": [0, 1, 3, 6], "search": 0, "page": 0, "deep_learn": [1, 5], "jax": [1, 5], "pytorch": [1, 3, 5, 6], "pytorchalgorithm": [1, 2, 5], "load_model": [1, 2, 5, 6], "predict": [1, 2, 5], "save_model": [1, 2, 5, 6], "train": [1, 2, 5, 6], "tensorflow": [1, 5], "knowledge_graph": [1, 5], "neo4j": [1, 5, 6], "neo4japi": [1, 3, 5], "close": [1, 3, 5], "decod": [1, 3, 5], "decode_col": [1, 3, 5], "fetch_data": [1, 3, 5], "load_edg": [1, 3, 5], "load_hetero_graph_dataset": [1, 3, 5], "load_nod": [1, 3, 5], "processor": [1, 5], "identityencod": [1, 3], "rdfprocessor": [1, 3], "load": [1, 3, 6], "queri": [1, 3], "sequenceencod": [1, 3, 6], "decode_tensor": [1, 3], "encode_tensor": [1, 3], "language_model": [1, 5], "model": [1, 2, 5, 6], "apilanguagemodel": [1, 4, 5], "locallanguagemodel": [1, 4, 5], "prompt_manag": [1, 5], "promptmanag": [1, 4, 5], "add_prompt": [1, 4, 5], "edit_prompt": [1, 4, 5], "get_prompt": [1, 4, 5], "class": [1, 2, 3, 4, 6], "algorithminterfac": [1, 2, 4, 5], "sourc": [1, 2, 3, 4, 6], "object": [1, 3, 4, 6], "path": [1, 2, 3, 6], "data": [1, 6], "train_data": [1, 2, 6], "lightgbm": [1, 5], "arg": [1, 2], "kwarg": [1, 2, 3], "uri": [1, 3], "user": [1, 3, 6], "password": [1, 3, 6], "static": [1, 3], "enc": [1, 3], "str": [1, 3, 6], "to_tensor": [1, 3], "fals": [1, 3], "map_non": [1, 3], "0": [1, 3, 6], "encod": [1, 3, 6], "string": [1, 3, 6], "The": [1, 3, 6], "output": [1, 3, 6], "i": [1, 3, 6], "either": [1, 3, 6], "list": [1, 3, 6], "float": [1, 3, 6], "1d": [1, 3], "tensor": [1, 3, 6], "dim": [1, 3], "768": [1, 3], "paramet": [1, 3, 6], "bool": [1, 3, 6], "option": [1, 3, 6], "whether": [1, 3, 6], "default": [1, 3, 6], "none": [1, 3, 6], "valu": [1, 3, 6], "would": [1, 3], "convert": [1, 3, 6], "thi": [1, 3, 6], "full": [1, 3], "return": [1, 3, 6], "type": [1, 3, 6], "df": [1, 3], "datafram": [1, 3, 6], "col": [1, 3], "colomn": [1, 3], "pd": [1, 3, 6], "place": [1, 3], "column": [1, 3], "int": [1, 3, 6], "under": [1, 3, 6], "develop": [1, 3, 6], "param": [1, 3], "src_index_col": [1, 3], "src_map": [1, 3], "dst_index_col": [1, 3], "dst_map": [1, 3], "node_label": [1, 3], "include_map": [1, 3], "true": [1, 3, 6], "heterodata": [1, 3, 6], "graph": [1, 3, 6], "dataset": [1, 3, 6], "contain": [1, 3, 6], "label": [1, 3], "cypher": [1, 3], "index_col": [1, 3], "_summary_": [1, 3], "input": [1, 3, 6], "node": [1, 3, 6], "index_column": [1, 3], "name": [1, 3, 6], "directori": [1, 3, 6], "sentenc": [1, 3, 6], "If": [1, 3, 6], "us": [1, 3, 6], "x": [1, 3], "map": [1, 3, 6], "dict": [1, 3, 6], "torch": [1, 3, 6], "prompt": [1, 4], "prompt_id": [1, 4], "new_prompt": [1, 4], "dtype": 3, "is_list": 3, "take": [3, 6], "raw": 3, "them": [3, 6], "model_nam": 3, "devic": [3, 6], "cache_fold": 3, "embed": [3, 6], "encoding_model": 3, "node_properti": 3, "content": 5, "heterognn": [5, 6], "forward": [5, 6], "add_new_position_nod": [5, 6], "generate_negative_sampl": [5, 6], "get_hetero_conv_lay": [5, 6], "json_to_feature_vector": [5, 6], "load_config": [5, 6], "load_dataset": [5, 6], "rec_sys_train": [5, 6], "recommend": [5, 6], "save_config": [5, 6], "save_dataset": [5, 6], "score_and_rank_employe": [5, 6], "similarity_comput": [5, 6], "transform_hetero_data_for_rec_si": [5, 6], "compute_auc": [5, 6], "compute_precision_recall_f1": [5, 6], "hit_at_k": [5, 6], "input_channel": 6, "hidden_channel": 6, "out_channel": 6, "torch_geometr": 6, "hetero_data": 6, "num_conv_lay": 6, "3": 6, "conv_lay": 6, "nn": 6, "conv": 6, "sage_conv": 6, "sageconv": 6, "A": 6, "heterogen": 6, "neural": 6, "network": 6, "gnn": 6, "built": 6, "design": 6, "handl": 6, "multipl": 6, "edg": 6, "It": 6, "construct": 6, "specifi": 6, "number": 6, "convolut": 6, "layer": 6, "which": 6, "can": 6, "defin": 6, "compos": 6, "sequenc": 6, "relu": 6, "activ": 6, "except": 6, "final": 6, "compat": 6, "featur": 6, "dictionari": 6, "channel": 6, "hidden": 6, "middl": 6, "produc": 6, "last": 6, "must": 6, "least": 6, "2": 6, "rgcnconv": 6, "rais": 6, "assertionerror": 6, "less": 6, "than": 6, "exampl": 6, "128": 6, "64": 6, "32": 6, "x_dict": 6, "edge_index_dict": 6, "indic": 6, "out": 6, "perform": 6, "pass": 6, "each": 6, "after": 6, "through": 6, "json_data": 6, "sentence_encod": 6, "techstack_map": 6, "cpu": 6, "add": 6, "new": 6, "posit": 6, "techstack": 6, "json": 6, "function": 6, "creat": 6, "inform": 6, "provid": 6, "ad": 6, "about": 6, "its": 6, "relat": 6, "an": 6, "instanc": 6, "pre": 6, "descript": 6, "tech": 6, "stack": 6, "correspond": 6, "e": 6, "g": 6, "cuda": 6, "oper": 6, "tupl": 6, "updat": 6, "yourheterodata": 6, "\u804c\u4f4d": 6, "softwar": 6, "engin": 6, "\u6280\u672f\u6808": 6, "python": 6, "javascript": 6, "position_idx": 6, "print": 6, "42": 6, "scientist": 6, "r": 6, "bert": 6, "uncas": 6, "43": 6, "pos_edge_index": 6, "num_nod": 6, "num_neg_sampl": 6, "gener": 6, "neg": 6, "sampl": 6, "shape": 6, "num_edg": 6, "repres": 6, "num_employe": 6, "num_project": 6, "categori": 6, "step": 6, "crucial": 6, "effect": 6, "your": 6, "especi": 6, "sinc": 6, "qualiti": 6, "significantli": 6, "influenc": 6, "": 6, "ar": 6, "straightforward": 6, "thei": 6, "exist": 6, "For": 6, "you": 6, "re": 6, "project": 6, "employe": 6, "workedin": 6, "more": 6, "challeng": 6, "need": 6, "pair": 6, "do": 6, "have": 6, "between": 6, "import": 6, "realist": 6, "should": 6, "plausibl": 6, "non": 6, "here": 6, "simpl": 6, "approach": 6, "randomli": 6, "select": 6, "check": 6, "form": 6, "valid": 6, "repeat": 6, "process": 6, "until": 6, "desir": 6, "usag": 6, "10000": 6, "4371": 6, "num_posit": 6, "adjust": 6, "assum": 6, "edge_index": 6, "neg_edge_index": 6, "in_channel": 6, "aggr": 6, "sum": 6, "suitabl": 6, "dynam": 6, "argument": 6, "support": 6, "both": 6, "other": 6, "like": 6, "iter": 6, "over": 6, "differ": 6, "instanti": 6, "requir": 6, "aggreg": 6, "mean": 6, "max": 6, "etc": 6, "heteroconv": 6, "respect": 6, "primarili": 6, "where": 6, "choic": 6, "allow": 6, "custom": 6, "specif": 6, "vector": 6, "union": 6, "represent": 6, "text": 6, "feature_vector": 6, "1234": 6, "5678": 6, "9876": 6, "anoth": 6, "4321": 6, "8765": 6, "config": 6, "check_kei": 6, "configur": 6, "yaml": 6, "file": 6, "kei": 6, "checklist": 6, "from": 6, "pt": 6, "loaded_dataset": 6, "datafil": 6, "pth": 6, "set": 6, "evalu": 6, "mode": 6, "same": 6, "architectur": 6, "one": 6, "dure": 6, "loaded_model": 6, "mymodel": 6, "eval": 6, "saved_model": 6, "save": 6, "system": 6, "format": 6, "my_config": 6, "url": 6, "http": 6, "localhost": 6, "7474": 6, "json_request": 6, "topk": 6, "5": 6, "verbos": 6, "1": 6, "top": 6, "request": 6, "calcul": 6, "score": 6, "rank": 6, "level": 6, "minim": 6, "f": 6, "john": 6, "smith": 6, "sarah": 6, "brown": 6, "michael": 6, "johnson": 6, "7654": 6, "file_path": 6, "absolut": 6, "wa": 6, "myheterodata": 6, "saved_path": 6, "new_position_idx": 6, "obtain": 6, "yourheterognn": 6, "two": 6, "sort": 6, "sorted_indic": 6, "sorted_scor": 6, "10": 6, "20": 6, "15": 6, "12": 6, "30": 6, "6543": 6, "input_request": 6, "ani": 6, "comput": 6, "similar": 6, "util": 6, "describ": 6, "we": 6, "look": 6, "experi": 6, "web": 6, "config_fil": 6, "recommendations_df": 6, "\u5de5\u53f7": 6, "\u5b66\u5386": 6, "\u9996\u6b21\u5de5\u4f5c\u65f6\u95f4": 6, "\u5e74\u9f84": 6, "master": 6, "degre": 6, "2010": 6, "35": 6, "bachelor": 6, "2012": 6, "31": 6, "phd": 6, "2009": 6, "37": 6, "val_data": 6, "target_edge_typ": 6, "loss_funct": 6, "marginrankingloss": 6, "optim": 6, "adam": 6, "num_epoch": 6, "loss_function_kwarg": 6, "margin": 6, "optimizer_kwarg": 6, "lr": 6, "001": 6, "k_to_hit": 6, "val_per_epoch": 6, "loss": 6, "target": 6, "head": 6, "tail": 6, "identifi": 6, "epoch": 6, "per": 6, "addit": 6, "keyword": 6, "learn": 6, "rate": 6, "k": 6, "hit": 6, "run": 6, "frequenc": 6, "somegnnmodel": 6, "load_hetero_data": 6, "interact": 6, "item": 6, "005": 6, "random_data_split": 6, "num_val": 6, "num_test": 6, "is_undirect": 6, "neg_sampling_ratio": 6, "edge_typ": 6, "rev_edge_typ": 6, "transform": 6, "make": 6, "undirect": 6, "split": 6, "test": 6, "proport": 6, "ratio": 6, "consid": 6, "revers": 6, "test_data": 6, "depend": 6, "flag": 6, "05": 6, "pos_scor": 6, "neg_scor": 6, "area": 6, "receiv": 6, "characterist": 6, "curv": 6, "roc": 6, "auc": 6, "8": 6, "9": 6, "7": 6, "4": 6, "threshold": 6, "precis": 6, "recal": 6, "f1": 6, "classifi": 6, "combin": 6, "6": 6, "hit_rat": 6, "tutori": 0}, "objects": {"": [[1, 0, 0, "-", "knowledge_algorithms"], [6, 0, 0, "-", "talent_recommendation"]], "knowledge_algorithms": [[1, 1, 1, "", "APILanguageModel"], [1, 1, 1, "", "AlgorithmInterface"], [1, 1, 1, "", "LightGBM"], [1, 1, 1, "", "LocalLanguageModel"], [1, 1, 1, "", "Neo4jAPI"], [1, 1, 1, "", "PromptManager"], [1, 1, 1, "", "PyTorchAlgorithm"], [1, 0, 0, "-", "base"], [2, 0, 0, "-", "deep_learning"], [3, 0, 0, "-", "knowledge_graph"], [4, 0, 0, "-", "language_models"], [1, 0, 0, "-", "tree_models"]], "knowledge_algorithms.AlgorithmInterface": [[1, 2, 1, "", "load_model"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "train"]], "knowledge_algorithms.LightGBM": [[1, 2, 1, "", "load_model"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "train"]], "knowledge_algorithms.Neo4jAPI": [[1, 2, 1, "", "close"], [1, 2, 1, "", "decode"], [1, 2, 1, "", "decode_col"], [1, 2, 1, "", "fetch_data"], [1, 2, 1, "", "load_edge"], [1, 2, 1, "", "load_hetero_graph_dataset"], [1, 2, 1, "", "load_node"]], "knowledge_algorithms.PromptManager": [[1, 2, 1, "", "add_prompt"], [1, 2, 1, "", "edit_prompt"], [1, 2, 1, "", "get_prompt"]], "knowledge_algorithms.PyTorchAlgorithm": [[1, 2, 1, "", "load_model"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "train"]], "knowledge_algorithms.base": [[1, 1, 1, "", "AlgorithmInterface"]], "knowledge_algorithms.base.AlgorithmInterface": [[1, 2, 1, "", "load_model"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "train"]], "knowledge_algorithms.deep_learning": [[2, 0, 0, "-", "jax"], [2, 0, 0, "-", "pytorch"], [2, 0, 0, "-", "tensorflow"]], "knowledge_algorithms.deep_learning.pytorch": [[2, 1, 1, "", "PyTorchAlgorithm"]], "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm": [[2, 2, 1, "", "load_model"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "save_model"], [2, 2, 1, "", "train"]], "knowledge_algorithms.knowledge_graph": [[3, 1, 1, "", "RDFProcessor"], [3, 0, 0, "-", "neo4j"], [3, 0, 0, "-", "processors"]], "knowledge_algorithms.knowledge_graph.RDFProcessor": [[3, 2, 1, "", "load"], [3, 2, 1, "", "query"]], "knowledge_algorithms.knowledge_graph.neo4j": [[3, 1, 1, "", "Neo4jAPI"]], "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI": [[3, 2, 1, "", "close"], [3, 2, 1, "", "decode"], [3, 2, 1, "", "decode_col"], [3, 2, 1, "", "fetch_data"], [3, 2, 1, "", "load_edge"], [3, 2, 1, "", "load_hetero_graph_dataset"], [3, 2, 1, "", "load_node"]], "knowledge_algorithms.knowledge_graph.processors": [[3, 1, 1, "", "IdentityEncoder"], [3, 1, 1, "", "RDFProcessor"], [3, 1, 1, "", "SequenceEncoder"], [3, 3, 1, "", "decode_tensor"], [3, 3, 1, "", "encode_tensor"]], "knowledge_algorithms.knowledge_graph.processors.RDFProcessor": [[3, 2, 1, "", "load"], [3, 2, 1, "", "query"]], "knowledge_algorithms.language_models": [[4, 0, 0, "-", "models"], [4, 0, 0, "-", "prompt_manager"]], "knowledge_algorithms.language_models.models": [[4, 1, 1, "", "APILanguageModel"], [4, 1, 1, "", "LocalLanguageModel"]], "knowledge_algorithms.language_models.prompt_manager": [[4, 1, 1, "", "PromptManager"]], "knowledge_algorithms.language_models.prompt_manager.PromptManager": [[4, 2, 1, "", "add_prompt"], [4, 2, 1, "", "edit_prompt"], [4, 2, 1, "", "get_prompt"]], "knowledge_algorithms.tree_models": [[1, 1, 1, "", "LightGBM"]], "knowledge_algorithms.tree_models.LightGBM": [[1, 2, 1, "", "load_model"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "save_model"], [1, 2, 1, "", "train"]], "talent_recommendation": [[6, 0, 0, "-", "BipartiteRecSys"], [6, 0, 0, "-", "metrics"]], "talent_recommendation.BipartiteRecSys": [[6, 1, 1, "", "HeteroGNN"], [6, 3, 1, "", "add_new_position_node"], [6, 3, 1, "", "generate_negative_samples"], [6, 3, 1, "", "get_hetero_conv_layer"], [6, 3, 1, "", "json_to_feature_vector"], [6, 3, 1, "", "load_configs"], [6, 3, 1, "", "load_dataset"], [6, 3, 1, "", "load_model"], [6, 3, 1, "", "rec_sys_train"], [6, 3, 1, "", "recommend"], [6, 3, 1, "", "save_configs"], [6, 3, 1, "", "save_dataset"], [6, 3, 1, "", "save_model"], [6, 3, 1, "", "score_and_rank_employees"], [6, 3, 1, "", "similarity_compute"], [6, 3, 1, "", "train"], [6, 3, 1, "", "transform_hetero_data_for_rec_sys"]], "talent_recommendation.BipartiteRecSys.HeteroGNN": [[6, 2, 1, "", "forward"]], "talent_recommendation.metrics": [[6, 3, 1, "", "compute_auc"], [6, 3, 1, "", "compute_precision_recall_f1"], [6, 3, 1, "", "hit_at_k"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "recsysalgo": 0, "": 0, "document": 0, "content": [0, 1, 2, 3, 4, 6], "indic": 0, "tabl": 0, "knowledge_algorithm": [1, 2, 3, 4], "packag": [1, 2, 3, 4, 6], "subpackag": 1, "submodul": [1, 2, 3, 4, 6], "base": 1, "modul": [1, 2, 3, 4, 6], "setup": 1, "tree_model": 1, "deep_learn": 2, "jax": 2, "pytorch": 2, "tensorflow": 2, "knowledge_graph": 3, "neo4j": 3, "processor": 3, "language_model": 4, "model": 4, "prompt_manag": 4, "knowledgealgorithm": 5, "talent_recommend": 6, "bipartiterecsi": 6, "metric": 6, "tutori": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"knowledge_algorithms.deep_learning package": [[2, "knowledge-algorithms-deep-learning-package"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [6, "submodules"], [1, "submodules"]], "knowledge_algorithms.deep_learning.jax module": [[2, "module-knowledge_algorithms.deep_learning.jax"]], "knowledge_algorithms.deep_learning.pytorch module": [[2, "module-knowledge_algorithms.deep_learning.pytorch"]], "knowledge_algorithms.deep_learning.tensorflow module": [[2, "module-knowledge_algorithms.deep_learning.tensorflow"]], "Module contents": [[2, "module-knowledge_algorithms.deep_learning"], [3, "module-knowledge_algorithms.knowledge_graph"], [4, "module-knowledge_algorithms.language_models"], [6, "module-talent_recommendation"], [1, "module-knowledge_algorithms"]], "knowledge_algorithms.knowledge_graph package": [[3, "knowledge-algorithms-knowledge-graph-package"]], "knowledge_algorithms.knowledge_graph.neo4j module": [[3, "module-knowledge_algorithms.knowledge_graph.neo4j"]], "knowledge_algorithms.knowledge_graph.processors module": [[3, "module-knowledge_algorithms.knowledge_graph.processors"]], "knowledge_algorithms.language_models package": [[4, "knowledge-algorithms-language-models-package"]], "knowledge_algorithms.language_models.models module": [[4, "module-knowledge_algorithms.language_models.models"]], "knowledge_algorithms.language_models.prompt_manager module": [[4, "module-knowledge_algorithms.language_models.prompt_manager"]], "KnowledgeAlgorithms": [[5, "knowledgealgorithms"]], "talent_recommendation package": [[6, "talent-recommendation-package"]], "talent_recommendation.BipartiteRecSys module": [[6, "module-talent_recommendation.BipartiteRecSys"]], "talent_recommendation.metrics module": [[6, "module-talent_recommendation.metrics"]], "Welcome to RecSysAlgo\u2019s documentation!": [[0, "welcome-to-recsysalgo-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Tutorials": [[7, "tutorials"]], "knowledge_algorithms package": [[1, "knowledge-algorithms-package"]], "Subpackages": [[1, "subpackages"]], "knowledge_algorithms.base module": [[1, "module-knowledge_algorithms.base"]], "knowledge_algorithms.setup module": [[1, "knowledge-algorithms-setup-module"]], "knowledge_algorithms.tree_models module": [[1, "module-knowledge_algorithms.tree_models"]]}, "indexentries": {"apilanguagemodel (class in knowledge_algorithms)": [[1, "knowledge_algorithms.APILanguageModel"]], "algorithminterface (class in knowledge_algorithms)": [[1, "knowledge_algorithms.AlgorithmInterface"]], "algorithminterface (class in knowledge_algorithms.base)": [[1, "knowledge_algorithms.base.AlgorithmInterface"]], "lightgbm (class in knowledge_algorithms)": [[1, "knowledge_algorithms.LightGBM"]], "lightgbm (class in knowledge_algorithms.tree_models)": [[1, "knowledge_algorithms.tree_models.LightGBM"]], "locallanguagemodel (class in knowledge_algorithms)": [[1, "knowledge_algorithms.LocalLanguageModel"]], "neo4japi (class in knowledge_algorithms)": [[1, "knowledge_algorithms.Neo4jAPI"]], "promptmanager (class in knowledge_algorithms)": [[1, "knowledge_algorithms.PromptManager"]], "pytorchalgorithm (class in knowledge_algorithms)": [[1, "knowledge_algorithms.PyTorchAlgorithm"]], "add_prompt() (knowledge_algorithms.promptmanager method)": [[1, "knowledge_algorithms.PromptManager.add_prompt"]], "close() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.close"]], "decode() (knowledge_algorithms.neo4japi static method)": [[1, "knowledge_algorithms.Neo4jAPI.decode"]], "decode_col() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.decode_col"]], "edit_prompt() (knowledge_algorithms.promptmanager method)": [[1, "knowledge_algorithms.PromptManager.edit_prompt"]], "fetch_data() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.fetch_data"]], "get_prompt() (knowledge_algorithms.promptmanager method)": [[1, "knowledge_algorithms.PromptManager.get_prompt"]], "knowledge_algorithms": [[1, "module-knowledge_algorithms"]], "knowledge_algorithms.base": [[1, "module-knowledge_algorithms.base"]], "knowledge_algorithms.tree_models": [[1, "module-knowledge_algorithms.tree_models"]], "load_edge() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.load_edge"]], "load_hetero_graph_dataset() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.load_hetero_graph_dataset"]], "load_model() (knowledge_algorithms.algorithminterface method)": [[1, "knowledge_algorithms.AlgorithmInterface.load_model"]], "load_model() (knowledge_algorithms.lightgbm method)": [[1, "knowledge_algorithms.LightGBM.load_model"]], "load_model() (knowledge_algorithms.pytorchalgorithm method)": [[1, "knowledge_algorithms.PyTorchAlgorithm.load_model"]], "load_model() (knowledge_algorithms.base.algorithminterface method)": [[1, "knowledge_algorithms.base.AlgorithmInterface.load_model"]], "load_model() (knowledge_algorithms.tree_models.lightgbm method)": [[1, "knowledge_algorithms.tree_models.LightGBM.load_model"]], "load_node() (knowledge_algorithms.neo4japi method)": [[1, "knowledge_algorithms.Neo4jAPI.load_node"]], "module": [[1, "module-knowledge_algorithms"], [1, "module-knowledge_algorithms.base"], [1, "module-knowledge_algorithms.tree_models"], [2, "module-knowledge_algorithms.deep_learning"], [2, "module-knowledge_algorithms.deep_learning.jax"], [2, "module-knowledge_algorithms.deep_learning.pytorch"], [2, "module-knowledge_algorithms.deep_learning.tensorflow"], [3, "module-knowledge_algorithms.knowledge_graph"], [3, "module-knowledge_algorithms.knowledge_graph.neo4j"], [3, "module-knowledge_algorithms.knowledge_graph.processors"], [4, "module-knowledge_algorithms.language_models"], [4, "module-knowledge_algorithms.language_models.models"], [4, "module-knowledge_algorithms.language_models.prompt_manager"], [6, "module-talent_recommendation"], [6, "module-talent_recommendation.BipartiteRecSys"], [6, "module-talent_recommendation.metrics"]], "predict() (knowledge_algorithms.algorithminterface method)": [[1, "knowledge_algorithms.AlgorithmInterface.predict"]], "predict() (knowledge_algorithms.lightgbm method)": [[1, "knowledge_algorithms.LightGBM.predict"]], "predict() (knowledge_algorithms.pytorchalgorithm method)": [[1, "knowledge_algorithms.PyTorchAlgorithm.predict"]], "predict() (knowledge_algorithms.base.algorithminterface method)": [[1, "knowledge_algorithms.base.AlgorithmInterface.predict"]], "predict() (knowledge_algorithms.tree_models.lightgbm method)": [[1, "knowledge_algorithms.tree_models.LightGBM.predict"]], "save_model() (knowledge_algorithms.algorithminterface method)": [[1, "knowledge_algorithms.AlgorithmInterface.save_model"]], "save_model() (knowledge_algorithms.lightgbm method)": [[1, "knowledge_algorithms.LightGBM.save_model"]], "save_model() (knowledge_algorithms.pytorchalgorithm method)": [[1, "knowledge_algorithms.PyTorchAlgorithm.save_model"]], "save_model() (knowledge_algorithms.base.algorithminterface method)": [[1, "knowledge_algorithms.base.AlgorithmInterface.save_model"]], "save_model() (knowledge_algorithms.tree_models.lightgbm method)": [[1, "knowledge_algorithms.tree_models.LightGBM.save_model"]], "train() (knowledge_algorithms.algorithminterface method)": [[1, "knowledge_algorithms.AlgorithmInterface.train"]], "train() (knowledge_algorithms.lightgbm method)": [[1, "knowledge_algorithms.LightGBM.train"]], "train() (knowledge_algorithms.pytorchalgorithm method)": [[1, "knowledge_algorithms.PyTorchAlgorithm.train"]], "train() (knowledge_algorithms.base.algorithminterface method)": [[1, "knowledge_algorithms.base.AlgorithmInterface.train"]], "train() (knowledge_algorithms.tree_models.lightgbm method)": [[1, "knowledge_algorithms.tree_models.LightGBM.train"]], "pytorchalgorithm (class in knowledge_algorithms.deep_learning.pytorch)": [[2, "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm"]], "knowledge_algorithms.deep_learning": [[2, "module-knowledge_algorithms.deep_learning"]], "knowledge_algorithms.deep_learning.jax": [[2, "module-knowledge_algorithms.deep_learning.jax"]], "knowledge_algorithms.deep_learning.pytorch": [[2, "module-knowledge_algorithms.deep_learning.pytorch"]], "knowledge_algorithms.deep_learning.tensorflow": [[2, "module-knowledge_algorithms.deep_learning.tensorflow"]], "load_model() (knowledge_algorithms.deep_learning.pytorch.pytorchalgorithm method)": [[2, "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm.load_model"]], "predict() (knowledge_algorithms.deep_learning.pytorch.pytorchalgorithm method)": [[2, "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm.predict"]], "save_model() (knowledge_algorithms.deep_learning.pytorch.pytorchalgorithm method)": [[2, "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm.save_model"]], "train() (knowledge_algorithms.deep_learning.pytorch.pytorchalgorithm method)": [[2, "knowledge_algorithms.deep_learning.pytorch.PyTorchAlgorithm.train"]], "identityencoder (class in knowledge_algorithms.knowledge_graph.processors)": [[3, "knowledge_algorithms.knowledge_graph.processors.IdentityEncoder"]], "neo4japi (class in knowledge_algorithms.knowledge_graph.neo4j)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI"]], "rdfprocessor (class in knowledge_algorithms.knowledge_graph)": [[3, "knowledge_algorithms.knowledge_graph.RDFProcessor"]], "rdfprocessor (class in knowledge_algorithms.knowledge_graph.processors)": [[3, "knowledge_algorithms.knowledge_graph.processors.RDFProcessor"]], "sequenceencoder (class in knowledge_algorithms.knowledge_graph.processors)": [[3, "knowledge_algorithms.knowledge_graph.processors.SequenceEncoder"]], "close() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.close"]], "decode() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi static method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.decode"]], "decode_col() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.decode_col"]], "decode_tensor() (in module knowledge_algorithms.knowledge_graph.processors)": [[3, "knowledge_algorithms.knowledge_graph.processors.decode_tensor"]], "encode_tensor() (in module knowledge_algorithms.knowledge_graph.processors)": [[3, "knowledge_algorithms.knowledge_graph.processors.encode_tensor"]], "fetch_data() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.fetch_data"]], "knowledge_algorithms.knowledge_graph": [[3, "module-knowledge_algorithms.knowledge_graph"]], "knowledge_algorithms.knowledge_graph.neo4j": [[3, "module-knowledge_algorithms.knowledge_graph.neo4j"]], "knowledge_algorithms.knowledge_graph.processors": [[3, "module-knowledge_algorithms.knowledge_graph.processors"]], "load() (knowledge_algorithms.knowledge_graph.rdfprocessor method)": [[3, "knowledge_algorithms.knowledge_graph.RDFProcessor.load"]], "load() (knowledge_algorithms.knowledge_graph.processors.rdfprocessor method)": [[3, "knowledge_algorithms.knowledge_graph.processors.RDFProcessor.load"]], "load_edge() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.load_edge"]], "load_hetero_graph_dataset() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.load_hetero_graph_dataset"]], "load_node() (knowledge_algorithms.knowledge_graph.neo4j.neo4japi method)": [[3, "knowledge_algorithms.knowledge_graph.neo4j.Neo4jAPI.load_node"]], "query() (knowledge_algorithms.knowledge_graph.rdfprocessor method)": [[3, "knowledge_algorithms.knowledge_graph.RDFProcessor.query"]], "query() (knowledge_algorithms.knowledge_graph.processors.rdfprocessor method)": [[3, "knowledge_algorithms.knowledge_graph.processors.RDFProcessor.query"]], "apilanguagemodel (class in knowledge_algorithms.language_models.models)": [[4, "knowledge_algorithms.language_models.models.APILanguageModel"]], "locallanguagemodel (class in knowledge_algorithms.language_models.models)": [[4, "knowledge_algorithms.language_models.models.LocalLanguageModel"]], "promptmanager (class in knowledge_algorithms.language_models.prompt_manager)": [[4, "knowledge_algorithms.language_models.prompt_manager.PromptManager"]], "add_prompt() (knowledge_algorithms.language_models.prompt_manager.promptmanager method)": [[4, "knowledge_algorithms.language_models.prompt_manager.PromptManager.add_prompt"]], "edit_prompt() (knowledge_algorithms.language_models.prompt_manager.promptmanager method)": [[4, "knowledge_algorithms.language_models.prompt_manager.PromptManager.edit_prompt"]], "get_prompt() (knowledge_algorithms.language_models.prompt_manager.promptmanager method)": [[4, "knowledge_algorithms.language_models.prompt_manager.PromptManager.get_prompt"]], "knowledge_algorithms.language_models": [[4, "module-knowledge_algorithms.language_models"]], "knowledge_algorithms.language_models.models": [[4, "module-knowledge_algorithms.language_models.models"]], "knowledge_algorithms.language_models.prompt_manager": [[4, "module-knowledge_algorithms.language_models.prompt_manager"]], "heterognn (class in talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.HeteroGNN"]], "add_new_position_node() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.add_new_position_node"]], "compute_auc() (in module talent_recommendation.metrics)": [[6, "talent_recommendation.metrics.compute_auc"]], "compute_precision_recall_f1() (in module talent_recommendation.metrics)": [[6, "talent_recommendation.metrics.compute_precision_recall_f1"]], "forward() (talent_recommendation.bipartiterecsys.heterognn method)": [[6, "talent_recommendation.BipartiteRecSys.HeteroGNN.forward"]], "generate_negative_samples() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.generate_negative_samples"]], "get_hetero_conv_layer() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.get_hetero_conv_layer"]], "hit_at_k() (in module talent_recommendation.metrics)": [[6, "talent_recommendation.metrics.hit_at_k"]], "json_to_feature_vector() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.json_to_feature_vector"]], "load_configs() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.load_configs"]], "load_dataset() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.load_dataset"]], "load_model() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.load_model"]], "rec_sys_train() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.rec_sys_train"]], "recommend() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.recommend"]], "save_configs() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.save_configs"]], "save_dataset() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.save_dataset"]], "save_model() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.save_model"]], "score_and_rank_employees() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.score_and_rank_employees"]], "similarity_compute() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.similarity_compute"]], "talent_recommendation": [[6, "module-talent_recommendation"]], "talent_recommendation.bipartiterecsys": [[6, "module-talent_recommendation.BipartiteRecSys"]], "talent_recommendation.metrics": [[6, "module-talent_recommendation.metrics"]], "train() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.train"]], "transform_hetero_data_for_rec_sys() (in module talent_recommendation.bipartiterecsys)": [[6, "talent_recommendation.BipartiteRecSys.transform_hetero_data_for_rec_sys"]]}})